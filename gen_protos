import os
import sys
import subprocess

def compile_protos():
    """
    Finds all .proto files in the '../protos' directory and compiles them
    into Python modules in the 'input' directory within the client folder.
    This script should be run from the project's root directory.
    e.g., python client/generate_protos.py
    """
    # Relative path from this script's location (client/) to the protos dir
    protos_dir = os.path.join(os.path.dirname(__file__), '..', 'protos')
    # Output directory is relative to this script
    output_dir = os.path.join(os.path.dirname(__file__), 'input')

    # Ensure the output directory exists and is a package
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
    
    init_file = os.path.join(output_dir, '__init__.py')
    if not os.path.exists(init_file):
        with open(init_file, 'w') as f:
            pass # Create empty __init__.py

    print(f"Compiling .proto files from '{os.path.abspath(protos_dir)}' into '{os.path.abspath(output_dir)}'")
    
    try:
        # Find all .proto files to be compiled
        proto_files = [os.path.join(protos_dir, f) for f in os.listdir(protos_dir) if f.endswith('.proto')]
        if not proto_files:
            print("No .proto files found to compile.")
            return

        # The command to run the protobuf compiler
        # We use the project root as the proto_path for clean imports
        command = [
            sys.executable,
            '-m',
            'grpc_tools.protoc',
            f'--proto_path={protos_dir}',
            f'--python_out={output_dir}'
        ]
        command.extend(proto_files)

        # Execute the command
        subprocess.run(command, check=True)
        print("Protobuf files compiled successfully.")

    except subprocess.CalledProcessError as e:
        print(f"Error: Failed to compile .proto files.\n{e}")
        print("Please ensure 'grpcio-tools' is installed (`pip install -r client/requirements.txt`)")
        sys.exit(1)
    except FileNotFoundError:
        print("Error: 'protoc' command not found.")
        print("Please ensure 'grpcio-tools' is installed (`pip install -r client/requirements.txt`)")
        sys.exit(1)


if __name__ == "__main__":
    compile_protos()
